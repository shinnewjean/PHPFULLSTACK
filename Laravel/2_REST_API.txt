0. REST(Representational State Transfer) API란?
	로이 필딩이 2000년에 정의한 네트워크 소프트웨어 아키텍처
	네트워크에서 통신을 구성할 때 사용하는 설계 지침
	태생 자체가 데이터 송수신에 최적화 되어 있다보니 웹 API 쪽에서 굉장히 많이 사용

1. REST API의 조건
	1-1. Client-Server
		클라이언트와 서버로 분리되어야하며 서로 의존성이 없어야 한다.
	1-2. Stateless(무상태성)
		상태 정보를 따로 저장하지 않으며, 이용자가 누구인지 혹은 어디서 접근하는지와 관계 없이 결과가 무조건 동일해야 한다.
		따라서 REST API는 필연적으로 오픈될 수밖에 없다.
	1-3. Cache
		HTTP를 비롯한 네트워크 프로토콜에서 제공하는 캐싱 기능을 적용할 수 있어야 한다.
	1-4. Uniform Interface
		데이터가 표준 형식으로 전송될 수 있도록 구성 요소 간 통합 인터페이스를 사용한다.
		REST API는 HTTP 표준인 URL과 응답 코드, Request-Response Method를 사용한다.
	1-5. Layered System
		API는 REST 조건을 만족하면 필연적으로 오픈될 수 밖에 없기 때문에,
		요청된 정보를 검색하는데 있어 계층 구조로 분리되어야 한다.
	1-6. Self-descriptiveness
		API를 통해 전송되는 내용은 별도 문서 없이 쉽게 이해할 수 있도록 자체 표현 구조를 지녀야 한다.
		현재는 주로 JSON이 가장 많이 사용되며, 간혹 XML이 사용된다.

3. REST API 설계 예시
	3-1. URI는 동사보다는 명사를, 대문자보다는 소문자를 사용하여야 한다.
	3-2. 마지막에 슬래시 (/)를 포함하지 않는다.
	3-3. 언더바 대신 하이폰을 사용한다.
	3-4. 파일확장자는 URI에 포함하지 않는다.
	3-5. 행위를 포함하지 않는다.
	3-6. 복수형 명사를 사용한다.

	EX) GET  	http://localhost/members/1  	:  	1번 회원 조회
		POST 	http://localhost/members		:  	회원 정보 리소스 생성
		PUT  	http://localhost/members/1  	:  	1번 회원 정보 수정
		DELETE 	http://localhost/members/1 	: 	1번 회원 정보 삭제